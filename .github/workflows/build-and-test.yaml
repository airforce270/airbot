name: Build and test

on:
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Set up Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version-file: go.mod

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Run coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./... -coverpkg ./...

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          path: airbot

      - name: Set up Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version-file: airbot/go.mod
          cache-dependency-path: airbot/go.sum

      - name: Build Docker image
        uses: docker/build-push-action@v6.5.0
        with:
          push: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Set up Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version-file: go.mod

      - name: Check format
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi

      - name: Lint
        uses: golangci/golangci-lint-action@v6.1.0
        with:
          version: latest
          args: "--timeout 3m"

      - name: Vet
        run: go vet

  lint-markdown:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Lint markdown
        uses: DavidAnson/markdownlint-cli2-action@v16.0.0
